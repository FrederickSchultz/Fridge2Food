{"ast":null,"code":"var _jsxFileName = \"/Users/alhadi/Desktop/F2f/Fridge2Food/FrontEnd/src/UserAuth/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, Redirect, Navigate, useSearchParams } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { reset_password } from \"../actions/auth\";\nimport NavPage from \"../NavPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = ({\n  reset_password\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [requestSent, setRequestSet] = useState(false);\n  const [params, setparams] = useSearchParams();\n  const userid = params.get(\"userid\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Perform login logic, validate credentials, etc.\n    // For simplicity, let's assume login is successful if username and password are non-empty\n    reset_password(email);\n    setRequestSet(true);\n  };\n  if (requestSent) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request Password Rese\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"email\",\n        defaultValue: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"Login\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n_s(ResetPassword, \"mCfAJCq2OQe6V2XlJ5ZVHV+PNN8=\", false, function () {\n  return [useSearchParams];\n});\n_c = ResetPassword;\nexport default connect(null, {\n  reset_password\n})(ResetPassword);\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","Link","Redirect","Navigate","useSearchParams","connect","axios","reset_password","NavPage","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","requestSent","setRequestSet","params","setparams","userid","get","handleSubmit","e","preventDefault","to","fileName","_jsxFileName","lineNumber","columnNumber","children","onSubmit","type","placeholder","defaultValue","onChange","target","value","required","className","_c","$RefreshReg$"],"sources":["/Users/alhadi/Desktop/F2f/Fridge2Food/FrontEnd/src/UserAuth/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {Link, Redirect, Navigate, useSearchParams} from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { reset_password } from \"../actions/auth\";\nimport NavPage from \"../NavPage\";\n\nconst ResetPassword = ({ reset_password }) => {\n    const [email, setEmail] = useState('')\n    const [requestSent, setRequestSet] = useState(false);\n    \n\n  const [params, setparams]  = useSearchParams()\n  const userid = params.get(\"userid\")\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n      // Perform login logic, validate credentials, etc.\n      // For simplicity, let's assume login is successful if username and password are non-empty\n      reset_password(email);\n      setRequestSet(true);\n  };\n\n  if (requestSent) {\n    return <Navigate to='/' />\n }\n\n  return (\n      <div>\n        <NavPage />\n        <h2>Request Password Rese</h2>\n        <form onSubmit={handleSubmit}>\n          <input\n              type=\"text\"\n              placeholder=\"email\"\n              defaultValue={email}\n              onChange={e => setEmail(e.target.value)}\n              required\n          />\n          <button className=\"btn btn-primary\" type=\"Login\">Reset Password</button>\n        </form>\n      </div>\n  );\n};\n\n\nexport default connect(null, { reset_password })(ResetPassword);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,eAAe,QAAO,kBAAkB;AAC1E,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,iBAAiB;AAChD,OAAOC,OAAO,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,aAAa,GAAGA,CAAC;EAAEJ;AAAe,CAAC,KAAK;EAAAK,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,WAAW,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAGtD,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAId,eAAe,CAAC,CAAC;EAC9C,MAAMe,MAAM,GAAGF,MAAM,CAACG,GAAG,CAAC,QAAQ,CAAC;EAEnC,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;IACAhB,cAAc,CAACM,KAAK,CAAC;IACrBG,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,IAAID,WAAW,EAAE;IACf,oBAAOL,OAAA,CAACP,QAAQ;MAACqB,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7B;EAEC,oBACIlB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACF,OAAO;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXlB,OAAA;MAAAmB,QAAA,EAAI;IAAqB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BlB,OAAA;MAAMoB,QAAQ,EAAET,YAAa;MAAAQ,QAAA,gBAC3BnB,OAAA;QACIqB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,OAAO;QACnBC,YAAY,EAAEpB,KAAM;QACpBqB,QAAQ,EAAEZ,CAAC,IAAIR,QAAQ,CAACQ,CAAC,CAACa,MAAM,CAACC,KAAK,CAAE;QACxCC,QAAQ;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFlB,OAAA;QAAQ4B,SAAS,EAAC,iBAAiB;QAACP,IAAI,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAc;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ,CAAC;AAAChB,EAAA,CApCID,aAAa;EAAA,QAKYP,eAAe;AAAA;AAAAmC,EAAA,GALxC5B,aAAa;AAuCnB,eAAeN,OAAO,CAAC,IAAI,EAAE;EAAEE;AAAe,CAAC,CAAC,CAACI,aAAa,CAAC;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}