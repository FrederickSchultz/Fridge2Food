{"ast":null,"code":"var _jsxFileName = \"/Users/alhadi/Desktop/F2Fgit/Fridge2Food/FrontEnd/src/UserAuth/ResetPasswordConfirm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, Redirect, Navigate, useSearchParams } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { reset_password, reset_password_confirm } from \"../actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPasswordConfirm = ({\n  match,\n  reset_password\n}) => {\n  _s();\n  const [new_password, setNewPassword] = useState('');\n  const [re_new_password, setReNewPassword] = useState('');\n  const [requestSent, setRequestSet] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const uid = match.params.uid;\n    const token = match.params.token;\n    reset_password_confirm(uid, token, new_password, re_new_password);\n    setRequestSet(true);\n  };\n  if (requestSent) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"logo.png\",\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"ribbon\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New Password\",\n        defaultValue: new_password,\n        onChange: e => setNewPassword(e.target.value),\n        minLength: \"6\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm New Password\",\n        defaultValue: re_new_password,\n        onChange: e => setReNewPassword(e.target.value),\n        minLength: \"6\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"Login\",\n        children: \"Reset New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n_s(ResetPasswordConfirm, \"F+vXpyljBZeRiLr5JkXuaj84Wjo=\");\n_c = ResetPasswordConfirm;\nexport default connect(null, {\n  reset_password_confirm\n})(ResetPasswordConfirm);\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordConfirm\");","map":{"version":3,"names":["React","useState","Link","Redirect","Navigate","useSearchParams","connect","axios","reset_password","reset_password_confirm","jsxDEV","_jsxDEV","ResetPasswordConfirm","match","_s","new_password","setNewPassword","re_new_password","setReNewPassword","requestSent","setRequestSet","handleSubmit","e","preventDefault","uid","params","token","to","fileName","_jsxFileName","lineNumber","columnNumber","children","className","src","alt","onSubmit","type","placeholder","defaultValue","onChange","target","value","minLength","required","_c","$RefreshReg$"],"sources":["/Users/alhadi/Desktop/F2Fgit/Fridge2Food/FrontEnd/src/UserAuth/ResetPasswordConfirm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {Link, Redirect, Navigate, useSearchParams} from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { reset_password, reset_password_confirm } from \"../actions/auth\";\n\nconst ResetPasswordConfirm = ({ match, reset_password }) => {\n    const [new_password, setNewPassword] = useState('');\n    const [re_new_password, setReNewPassword] = useState('');\n    const [requestSent, setRequestSet] = useState(false);\n    \n\n\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n      const uid = match.params.uid;\n      const token = match.params.token;\n      reset_password_confirm(uid, token, new_password, re_new_password);\n      setRequestSet(true);\n  };\n\n  if (requestSent) {\n    return <Navigate to='/' />\n  }\n\n  return (\n      <div>\n        <div className=\"banner\">\n          <div className=\"logo\">\n            <img src=\"logo.png\" alt=\"Logo\"></img>\n          </div>\n\n          <nav className=\"ribbon\">\n            <ul>\n              {/* Replace anchor tag with Link */}\n\n              {\n             //   userid < 0 ? <li><Link to=\"/login\">Login</Link></li> : <li><Link to=\"/\">logout</Link></li>\n              }\n            </ul>\n          </nav>\n        </div>\n        <h2>Request Password Reset</h2>\n        <form onSubmit={handleSubmit}>\n          <input\n              type=\"password\"\n              placeholder=\"New Password\"\n              defaultValue={new_password}\n              onChange={e => setNewPassword(e.target.value)}\n              minLength='6'\n              required\n          />\n          <input\n              type=\"password\"\n              placeholder=\"Confirm New Password\"\n              defaultValue={re_new_password}\n              onChange={e => setReNewPassword(e.target.value)}\n              minLength='6'\n              required\n          />\n          <button className=\"btn btn-primary\" type=\"Login\">Reset New Password</button>\n        </form>\n      </div>\n  );\n};\n\n\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}