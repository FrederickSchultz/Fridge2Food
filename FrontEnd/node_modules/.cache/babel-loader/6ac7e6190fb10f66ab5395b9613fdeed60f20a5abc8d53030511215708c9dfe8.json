{"ast":null,"code":"import{LOGIN_SUCCESS,LOGIN_FAIL,USER_LOADED_SUCCESS,USER_LOADED_FAIL,AUTHENTICATED_SUCCESS,SIGNUP_SUCCESS,SIGNUP_FAIL,LOGOUT,PASSWORD_RESET_SUCCESS,PASSWORD_RESET_FAIL,PASSWORD_RESET_CONFIRM_FAIL,PASSWORD_RESET_CONFIRM_SUCCESS,ACTIVATION_FAIL,ACTIVATION_SUCCESS,AUTHENTICATED_FAIL}from\"./types\";import axios from\"axios\";export const checkAuthenticated=()=>async dispatch=>{if(localStorage.getItem('access')){const config={headers:{'Content-Type':'application/json','Accept':'application/json'}};const body=JSON.stringify({token:localStorage.getItem('access')});try{const res=axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/jwt/verify/\"),body,config);if((await res).data.code!=='token_not_valid'){dispatch({type:AUTHENTICATED_SUCCESS});}else{dispatch({type:AUTHENTICATED_FAIL});}}catch(err){dispatch({type:AUTHENTICATED_FAIL});}}else{dispatch({type:AUTHENTICATED_FAIL});}};export const load_user=()=>async dispatch=>{if(localStorage.getItem('access')){const config={headers:{'Content-Type':'application/json','Authorization':\"JWT \".concat(localStorage.getItem('access')),'Accept':'application/json'}};try{const res=await axios.get(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/users/me/\"),config);dispatch({type:USER_LOADED_SUCCESS,payload:res.data});}catch(err){console.log(\"LOGIN_FAIL\");dispatch({type:USER_LOADED_FAIL});}console.log(\"LOGIN_SUCCESS\");}else{console.log(\"LOGIN_FAIL\");dispatch({type:USER_LOADED_FAIL});}};export const login=(email,password)=>async dispatch=>{const config={headers:{'Content-Type':'application/json'}};const body=JSON.stringify({email,password});console.log(body);try{const res=await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/jwt/create/\"),body,config);dispatch({type:LOGIN_SUCCESS,payload:res.data});dispatch(load_user());}catch(err){dispatch({type:LOGIN_FAIL});}};export const reset_password=email=>async dispatch=>{const config={headers:{'Content-Type':'application/json'}};const body=JSON.stringify({email});try{await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/users/reset_password/\"),body,config);dispatch({type:PASSWORD_RESET_SUCCESS});}catch(err){dispatch({type:PASSWORD_RESET_FAIL});}};export const reset_password_confirm=(uid,token,new_password,re_new_password)=>async dispatch=>{const config={headers:{'Content-Type':'application/json'}};const body=JSON.stringify({uid,token,new_password,re_new_password});try{await axios.post(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/users/reset_password_confirm/\"),body,config);dispatch({type:PASSWORD_RESET_CONFIRM_SUCCESS});}catch(err){dispatch({type:PASSWORD_RESET_CONFIRM_FAIL});}};export const logout=()=>dispatch=>{dispatch({type:LOGOUT});};","map":{"version":3,"names":["LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGOUT","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","ACTIVATION_FAIL","ACTIVATION_SUCCESS","AUTHENTICATED_FAIL","axios","checkAuthenticated","dispatch","localStorage","getItem","config","headers","body","JSON","stringify","token","res","post","concat","process","env","REACT_APP_API_URL","data","code","type","err","load_user","get","payload","console","log","login","email","password","reset_password","reset_password_confirm","uid","new_password","re_new_password","logout"],"sources":["D:/Github/Fridge2Food/FrontEnd/src/actions/auth.js"],"sourcesContent":["import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    LOGOUT,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n\r\n} from \"./types\"\r\nimport axios from \"axios\";\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if(localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access')});\r\n\r\n        try {\r\n            const res = axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if ((await res).data.code !== 'token_not_valid') {\r\n                 dispatch ({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch ({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch ({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n        }\r\n    } else {\r\n        dispatch ({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n}\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            console.log(\"LOGIN_FAIL\")\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n        console.log(\"LOGIN_SUCCESS\")\r\n    } else {\r\n        console.log(\"LOGIN_FAIL\")\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n    console.log(body)\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        })\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n};\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}