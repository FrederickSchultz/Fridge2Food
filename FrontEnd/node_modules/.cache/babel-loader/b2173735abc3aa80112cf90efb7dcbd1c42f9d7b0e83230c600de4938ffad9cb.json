{"ast":null,"code":"import React,{useState}from'react';import{Link,Redirect,Navigate,useSearchParams}from'react-router-dom';import{connect}from\"react-redux\";import axios from\"axios\";import{login,load_user}from\"../actions/auth\";import NavPage from\"../NavPage\";import store from\"../store\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Login=_ref=>{let{login,isAuthenticated}=_ref;const[email,setEmail]=useState('');const[password,setPassword]=useState(\"\");const handleSubmit=e=>{e.preventDefault();// Perform login logic, validate credentials, etc.\n// For simplicity, let's assume login is successful if username and password are non-empty\nlogin(email,password);};if(isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/\"});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(NavPage,{}),/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"email\",defaultValue:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",defaultValue:password,onChange:e=>setPassword(e.target.value),minLength:\"6\",required:true}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",type:\"Login\",children:\"Login\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"mt-3\",children:[\" Don't have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:\"Sign Up!\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"mt-3\",children:[\" Forgot Password? \",/*#__PURE__*/_jsx(Link,{to:\"/reset-password\",children:\"Reset Password\"})]})]});};const mapStateToProps=state=>({isAuthenticated:state.auth.isAuthenticated});export default connect(mapStateToProps,{login})(Login);","map":{"version":3,"names":["React","useState","Link","Redirect","Navigate","useSearchParams","connect","axios","login","load_user","NavPage","store","jsx","_jsx","jsxs","_jsxs","Login","_ref","isAuthenticated","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","to","children","onSubmit","type","placeholder","defaultValue","onChange","target","value","required","minLength","className","mapStateToProps","state","auth"],"sources":["D:/Github/Fridge2Food/FrontEnd/src/UserAuth/Loginpage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {Link, Redirect, Navigate, useSearchParams} from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { login, load_user } from \"../actions/auth\";\r\nimport NavPage from \"../NavPage\"\r\nimport store from \"../store\";\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      // Perform login logic, validate credentials, etc.\r\n      // For simplicity, let's assume login is successful if username and password are non-empty\r\n      login(email, password)\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <NavPage />\r\n        <h2>Login</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n              type=\"text\"\r\n              placeholder=\"email\"\r\n              defaultValue={email}\r\n              onChange={e => setEmail(e.target.value)}\r\n              required\r\n          />\r\n          <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              defaultValue={password}\r\n              onChange={e => setPassword(e.target.value)}\r\n              minLength='6'\r\n              required\r\n          />\r\n          <button className=\"btn btn-primary\" type=\"Login\">Login</button>\r\n        </form>\r\n        <p className=\"mt-3\"> Don't have an account? <Link to='/signup'>Sign Up!</Link></p>\r\n        <p className=\"mt-3\"> Forgot Password? <Link to='/reset-password'>Reset Password</Link></p>\r\n      </div>\r\n  );\r\n};\r\nconst  mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAAQC,IAAI,CAAEC,QAAQ,CAAEC,QAAQ,CAAEC,eAAe,KAAO,kBAAkB,CAC1E,OAASC,OAAO,KAAQ,aAAa,CACrC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,KAAK,CAAEC,SAAS,KAAQ,iBAAiB,CAClD,MAAO,CAAAC,OAAO,KAAM,YAAY,CAChC,MAAO,CAAAC,KAAK,KAAM,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE7B,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAAgC,IAA/B,CAAET,KAAK,CAAEU,eAAgB,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACoB,QAAQ,CAAEC,WAAW,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CAE9C,KAAM,CAAAsB,YAAY,CAAIC,CAAC,EAAK,CACxBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB;AACA;AACAjB,KAAK,CAACW,KAAK,CAAEE,QAAQ,CAAC,CAC1B,CAAC,CAED,GAAIH,eAAe,CAAE,CACnB,mBAAOL,IAAA,CAACT,QAAQ,EAACsB,EAAE,CAAC,GAAG,CAAE,CAAC,CAC5B,CAEA,mBACIX,KAAA,QAAAY,QAAA,eACEd,IAAA,CAACH,OAAO,GAAE,CAAC,cACXG,IAAA,OAAAc,QAAA,CAAI,OAAK,CAAI,CAAC,cACdZ,KAAA,SAAMa,QAAQ,CAAEL,YAAa,CAAAI,QAAA,eAC3Bd,IAAA,UACIgB,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,OAAO,CACnBC,YAAY,CAAEZ,KAAM,CACpBa,QAAQ,CAAER,CAAC,EAAIJ,QAAQ,CAACI,CAAC,CAACS,MAAM,CAACC,KAAK,CAAE,CACxCC,QAAQ,MACX,CAAC,cACFtB,IAAA,UACIgB,IAAI,CAAC,UAAU,CACfC,WAAW,CAAC,UAAU,CACtBC,YAAY,CAAEV,QAAS,CACvBW,QAAQ,CAAER,CAAC,EAAIF,WAAW,CAACE,CAAC,CAACS,MAAM,CAACC,KAAK,CAAE,CAC3CE,SAAS,CAAC,GAAG,CACbD,QAAQ,MACX,CAAC,cACFtB,IAAA,WAAQwB,SAAS,CAAC,iBAAiB,CAACR,IAAI,CAAC,OAAO,CAAAF,QAAA,CAAC,OAAK,CAAQ,CAAC,EAC3D,CAAC,cACPZ,KAAA,MAAGsB,SAAS,CAAC,MAAM,CAAAV,QAAA,EAAC,0BAAwB,cAAAd,IAAA,CAACX,IAAI,EAACwB,EAAE,CAAC,SAAS,CAAAC,QAAA,CAAC,UAAQ,CAAM,CAAC,EAAG,CAAC,cAClFZ,KAAA,MAAGsB,SAAS,CAAC,MAAM,CAAAV,QAAA,EAAC,oBAAkB,cAAAd,IAAA,CAACX,IAAI,EAACwB,EAAE,CAAC,iBAAiB,CAAAC,QAAA,CAAC,gBAAc,CAAM,CAAC,EAAG,CAAC,EACvF,CAAC,CAEZ,CAAC,CACD,KAAO,CAAAW,eAAe,CAAGC,KAAK,GAAK,CACjCrB,eAAe,CAAEqB,KAAK,CAACC,IAAI,CAACtB,eAC9B,CAAC,CAAC,CAEF,cAAe,CAAAZ,OAAO,CAACgC,eAAe,CAAE,CAAE9B,KAAM,CAAC,CAAC,CAACQ,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}