{"ast":null,"code":"import { LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED_SUCCESS, USER_LOADED_FAIL, AUTHENTICATED_SUCCESS, SIGNUP_SUCCESS, SIGNUP_FAIL, LOGOUT, PASSWORD_RESET_SUCCESS, PASSWORD_RESET_FAIL, PASSWORD_RESET_CONFIRM_FAIL, PASSWORD_RESET_CONFIRM_SUCCESS, ACTIVATION_FAIL, ACTIVATION_SUCCESS, AUTHENTICATED_FAIL } from \"./types\";\nimport axios from \"axios\";\nexport const checkAuthenticated = () => async dispatch => {\n  if (localStorage.getItem('access')) {}\n};\nexport const load_user = () => async dispatch => {\n  if (localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `JWT ${localStorage.getItem('access')}`,\n        'Accept': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      console.log(\"LOGIN_FAIL\");\n      dispatch({\n        type: USER_LOADED_FAIL\n      });\n    }\n    console.log(\"LOGIN_SUCCESS\");\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL\n    });\n  }\n};\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  console.log(body);\n  try {\n    const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(load_user());\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"names":["LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGOUT","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","ACTIVATION_FAIL","ACTIVATION_SUCCESS","AUTHENTICATED_FAIL","axios","checkAuthenticated","dispatch","localStorage","getItem","load_user","config","headers","res","get","process","env","REACT_APP_API_URL","type","payload","data","err","console","log","login","email","password","body","JSON","stringify","post","logout"],"sources":["/Users/alhadi/Desktop/F2Fgit/Fridge2Food/FrontEnd/src/actions/auth.js"],"sourcesContent":["import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    LOGOUT,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    ACTIVATION_FAIL,\n    ACTIVATION_SUCCESS,\n    AUTHENTICATED_FAIL,\n\n} from \"./types\"\nimport axios from \"axios\";\n\nexport const checkAuthenticated = () => async dispatch => {\n    if(localStorage.getItem('access')) {\n\n    }\n}\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        };\n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n\n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        } catch (err) {\n            console.log(\"LOGIN_FAIL\")\n            dispatch({\n                type: USER_LOADED_FAIL\n            });\n        }\n        console.log(\"LOGIN_SUCCESS\")\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }\n};\n\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n    console.log(body)\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(load_user());\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n};\n\nexport const logout = () => dispatch => {\n    dispatch({\n        type: LOGOUT\n    });\n}"],"mappings":"AAAA,SACIA,aAAa,EACbC,UAAU,EACVC,mBAAmB,EACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,cAAc,EACdC,WAAW,EACXC,MAAM,EACNC,sBAAsB,EACtBC,mBAAmB,EACnBC,2BAA2B,EAC3BC,8BAA8B,EAC9BC,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,QAEf,SAAS;AAChB,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM,MAAMC,QAAQ,IAAI;EACtD,IAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAEnC;AACJ,CAAC;AACD,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM,MAAMH,QAAQ,IAAI;EAC7C,IAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;IAChC,MAAME,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,OAAMJ,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAE,EAAC;QACxD,QAAQ,EAAE;MACd;IACJ,CAAC;IAED,IAAI;MACA,MAAMI,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,iBAAgB,EAAEN,MAAM,CAAC;MAEtFJ,QAAQ,CAAC;QACLW,IAAI,EAAE1B,mBAAmB;QACzB2B,OAAO,EAAEN,GAAG,CAACO;MACjB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzBhB,QAAQ,CAAC;QACLW,IAAI,EAAEzB;MACV,CAAC,CAAC;IACN;IACA6B,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAChC,CAAC,MAAM;IACHhB,QAAQ,CAAC;MACLW,IAAI,EAAEzB;IACV,CAAC,CAAC;EACN;AACJ,CAAC;AAGD,OAAO,MAAM+B,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAMnB,QAAQ,IAAI;EACxD,MAAMI,MAAM,GAAG;IACXC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC;EAED,MAAMe,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAAEJ,KAAK;IAAEC;EAAS,CAAC,CAAC;EAChDJ,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;EAEjB,IAAI;IACA,MAAMd,GAAG,GAAG,MAAMR,KAAK,CAACyB,IAAI,CAAE,GAAEf,OAAO,CAACC,GAAG,CAACC,iBAAkB,mBAAkB,EAAEU,IAAI,EAAEhB,MAAM,CAAC;IAE/FJ,QAAQ,CAAC;MACLW,IAAI,EAAE5B,aAAa;MACnB6B,OAAO,EAAEN,GAAG,CAACO;IACjB,CAAC,CAAC;IAEFb,QAAQ,CAACG,SAAS,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOW,GAAG,EAAE;IACVd,QAAQ,CAAC;MACLW,IAAI,EAAE3B;IACV,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAMwC,MAAM,GAAGA,CAAA,KAAMxB,QAAQ,IAAI;EACpCA,QAAQ,CAAC;IACLW,IAAI,EAAErB;EACV,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}