{"ast":null,"code":"var _jsxFileName = \"/Users/alhadi/Desktop/F2f/Fridge2Food/FrontEnd/src/Homepage.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // Import Link from react-router-dom\nimport './App.css';\nimport RecipeGrid from './RecipeGrid';\nimport axios from \"axios\";\nimport { checkAuthenticated, load_user } from './actions/auth';\nimport { connect } from 'react-redux';\nimport NavPage from './NavPage';\nimport { Carousel, Layout, Flex } from \"antd\";\nimport store from \"./store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Content\n} = Layout;\nclass Homepage extends React.Component {\n  constructor(props) {\n    super(props);\n    // Code to load data from backend\n    this.fetchData = async () => {\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/recipes?random=True`);\n      const listRecipes = response.data.map(recipe => ({\n        ...recipe,\n        favorited: false\n      }));\n      this.setState({\n        carouselImages: response.data.slice(0, 3),\n        recipes: listRecipes\n      });\n    };\n    this.handleHoverImage = index => {\n      this.setState({\n        hoveredImageIndex: index\n      });\n    };\n    this.handleSearchChange = event => {\n      this.setState({\n        searchQuery: event.target.value\n      });\n    };\n    this.handleCanMakeChange = async () => {\n      const showCanMakeOnly = !this.state.showCanMakeOnly;\n      this.setState({\n        showCanMakeOnly\n      }); // Update state early to toggle the checkbox state\n\n      if (showCanMakeOnly) {\n        const state = store.getState();\n        let userId = -1;\n        if (state.auth.user) {\n          userId = state.auth.user.id;\n        } else {\n          alert(\"Please login to show recipes you can make.\");\n          return;\n        }\n        try {\n          const user = (await axios.get(`${process.env.REACT_APP_API_URL}/Users?userid=${userId}`)).data;\n          if (!user.fridgeId) {\n            alert(\"No fridge information found.\");\n            return;\n          }\n          const recipes = (await axios.get(`${process.env.REACT_APP_API_URL}/recipes?fridgeId=${user.fridgeId}`)).data;\n          const listRecipes = recipes.map(recipe => ({\n            ...recipe,\n            favorited: false // Adjust according to your logic for checking if a recipe is favorited\n          }));\n          this.setState({\n            recipes: listRecipes\n          });\n        } catch (error) {\n          console.error(\"Failed to fetch recipes based on fridge contents:\", error);\n          alert(\"Failed to load recipes you can make.\");\n        }\n      } else {\n        await this.fetchData(); // Reset to all recipes when unchecked\n      }\n    };\n    this.handleFavoritedChange = async () => {\n      const showFavoritedOnly = !this.state.showFavoritedOnly;\n      const state = store.getState();\n      let userId = -1;\n      if (state.auth.user) {\n        userId = state.auth.user.id;\n      } else {\n        alert(\"login to show favorites\");\n        return;\n      }\n      if (showFavoritedOnly) {\n        const user = (await axios.get(`${process.env.REACT_APP_API_URL}/Users?userid=${userId}`)).data;\n        let currentRecipes = [];\n        for (let i = 0; i < user.saved_recipes.length; i++) {\n          currentRecipes.push((await axios.get(`${process.env.REACT_APP_API_URL}/Recipe?recipeId=${user.saved_recipes[i]}`)).data);\n        }\n        const listRecipes = currentRecipes.map(recipe => ({\n          ...recipe,\n          favorited: true\n        }));\n        console.log(listRecipes);\n        this.setState(prevState => ({\n          recipes: listRecipes\n        }));\n      } else {\n        await this.fetchData();\n      }\n      this.setState(prevState => ({\n        showFavoritedOnly: showFavoritedOnly\n      }));\n    };\n    this.handleToggleFavorite = index => {\n      const state = store.getState();\n      let userId = -1;\n      if (state.auth.user) {\n        userId = state.auth.user.id;\n      }\n      this.setState(prevState => {\n        const updatedRecipes = [...prevState.recipes];\n        if (userId < 0) {\n          alert(\"Login to Favorite Recipes\");\n          return {\n            recipes: updatedRecipes\n          };\n        }\n        const savedRecipe = {\n          \"recipeID\": updatedRecipes[index].recipe_Id,\n          \"url\": updatedRecipes[index].url,\n          \"users\": userId,\n          \"name\": updatedRecipes[index].name,\n          \"image\": updatedRecipes[index].image,\n          \"total_time\": 0\n        };\n        axios.post(`${process.env.REACT_APP_API_URL}/Recipe`, savedRecipe).then(res => {\n          console.log(res);\n        });\n        updatedRecipes[index].favorited = !updatedRecipes[index].favorited;\n        return {\n          recipes: updatedRecipes\n        };\n      });\n    };\n    console.log(this.props);\n    //Get random images for carousel\n    this.state = {\n      carouselImages: [],\n      hoveredImageIndex: null,\n      recipes: [],\n      searchQuery: '',\n      showCanMakeOnly: false,\n      showFavoritedOnly: false\n    };\n  }\n  componentDidMount() {\n    this.props.checkAuthenticated();\n    this.props.load_user();\n    this.fetchData();\n  }\n  render() {\n    const {\n      carouselImages,\n      hoveredImageIndex,\n      recipes,\n      searchQuery,\n      showCanMakeOnly,\n      showFavoritedOnly\n    } = this.state;\n    const queryParameters = new URLSearchParams(window.location.search);\n    const userId = queryParameters.get(\"userid\");\n    const link = '/my-fridge?userid=' + userId;\n    // Filter recipes based on search query and checkboxes\n    const filteredRecipes = recipes.filter(recipe => recipe.name.toLowerCase().includes(searchQuery.toLowerCase()) && (!showFavoritedOnly || recipe.favorited));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggested-recipes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Suggested Recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-scroll-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carousel\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"carousel-inner\",\n              children: carouselImages.map((imageData, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n                href: imageData.url,\n                className: \"image-link\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-container\",\n                  onMouseEnter: () => this.handleHoverImage(index),\n                  onMouseLeave: () => this.handleHoverImage(null),\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: imageData.image,\n                    alt: imageData.name,\n                    className: index === hoveredImageIndex ? 'center grow' : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 23\n                  }, this), index === hoveredImageIndex && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"overlay\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: imageData.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 205,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-recipes\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search...\",\n            value: searchQuery,\n            onChange: this.handleSearchChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: showCanMakeOnly,\n              onChange: this.handleCanMakeChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), \"Only show recipes I can make\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: showFavoritedOnly,\n              onChange: this.handleFavoritedChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), \"Only show favorited recipes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-scroll-container\",\n          children: /*#__PURE__*/_jsxDEV(RecipeGrid, {\n            recipes: filteredRecipes,\n            onToggleFavorite: this.handleToggleFavorite\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapDispatchToProps = dispatch => ({\n  checkAuthenticated: () => dispatch(checkAuthenticated()),\n  load_user: () => dispatch(load_user())\n});\nexport default connect(null, mapDispatchToProps)(Homepage);","map":{"version":3,"names":["React","Link","RecipeGrid","axios","checkAuthenticated","load_user","connect","NavPage","Carousel","Layout","Flex","store","jsxDEV","_jsxDEV","Header","Content","Homepage","Component","constructor","props","fetchData","response","get","process","env","REACT_APP_API_URL","listRecipes","data","map","recipe","favorited","setState","carouselImages","slice","recipes","handleHoverImage","index","hoveredImageIndex","handleSearchChange","event","searchQuery","target","value","handleCanMakeChange","showCanMakeOnly","state","getState","userId","auth","user","id","alert","fridgeId","error","console","handleFavoritedChange","showFavoritedOnly","currentRecipes","i","saved_recipes","length","push","log","prevState","handleToggleFavorite","updatedRecipes","savedRecipe","recipe_Id","url","name","image","post","then","res","componentDidMount","render","queryParameters","URLSearchParams","window","location","search","link","filteredRecipes","filter","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","imageData","href","onMouseEnter","onMouseLeave","src","alt","type","placeholder","onChange","checked","onToggleFavorite","mapDispatchToProps","dispatch"],"sources":["/Users/alhadi/Desktop/F2f/Fridge2Food/FrontEnd/src/Homepage.js"],"sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom'; // Import Link from react-router-dom\nimport './App.css';\nimport RecipeGrid from './RecipeGrid';\nimport axios from \"axios\";\nimport { checkAuthenticated, load_user } from './actions/auth';\nimport { connect } from 'react-redux';\nimport NavPage from './NavPage';\nimport { Carousel, Layout, Flex } from \"antd\"\nimport store from \"./store\";\n\nconst {Header, Content} = Layout\n\n\n\nclass Homepage extends React.Component {\n\n  \n\n  constructor(props) {\n    super(props);\n    // Code to load data from backend\n    console.log(this.props)\n    //Get random images for carousel\n        this.state = {\n          carouselImages: [],\n          hoveredImageIndex: null,\n          recipes: [],\n          searchQuery: '',\n          showCanMakeOnly: false,\n          showFavoritedOnly: false\n        }\n\n  }\n  componentDidMount(){\n    this.props.checkAuthenticated();\n    this.props.load_user();\n    this.fetchData();\n  }\n\n  fetchData = async () => {\n    const response = await axios.get(`${process.env.REACT_APP_API_URL}/recipes?random=True`);\n    const listRecipes = response.data.map(recipe => ({\n      ...recipe,\n      favorited: false\n    }));\n    this.setState({\n      carouselImages: response.data.slice(0, 3),\n      recipes: listRecipes\n    });\n  }\n\n  handleHoverImage = (index) => {\n    this.setState({ hoveredImageIndex: index });\n  }\n\n  handleSearchChange = (event) => {\n    this.setState({ searchQuery: event.target.value });\n  }\n\n handleCanMakeChange = async () => {\n    const showCanMakeOnly = !this.state.showCanMakeOnly;\n    this.setState({ showCanMakeOnly }); // Update state early to toggle the checkbox state\n\n    if (showCanMakeOnly) {\n        const state = store.getState();\n        let userId = -1;\n        if (state.auth.user) {\n            userId = state.auth.user.id;\n        } else {\n            alert(\"Please login to show recipes you can make.\");\n            return;\n        }\n\n        try {\n            const user = (await axios.get(`${process.env.REACT_APP_API_URL}/Users?userid=${userId}`)).data;\n            if (!user.fridgeId) {\n                alert(\"No fridge information found.\");\n                return;\n            }\n\n            const recipes = (await axios.get(`${process.env.REACT_APP_API_URL}/recipes?fridgeId=${user.fridgeId}`)).data;\n            const listRecipes = recipes.map(recipe => ({\n                ...recipe,\n                favorited: false // Adjust according to your logic for checking if a recipe is favorited\n            }));\n\n            this.setState({ recipes: listRecipes });\n        } catch (error) {\n            console.error(\"Failed to fetch recipes based on fridge contents:\", error);\n            alert(\"Failed to load recipes you can make.\");\n        }\n    } else {\n        await this.fetchData(); // Reset to all recipes when unchecked\n    }\n}\n\n\n  handleFavoritedChange = async () => {\n    const showFavoritedOnly = !this.state.showFavoritedOnly\n    const state = store.getState()\n    let userId = -1\n    if(state.auth.user){\n      userId = state.auth.user.id\n    }else {\n      alert(\"login to show favorites\")\n      return\n    }\n\n    if(showFavoritedOnly) {\n      const user = (await axios.get(`${process.env.REACT_APP_API_URL}/Users?userid=${userId}`)).data\n      let currentRecipes = []\n      for (let i = 0; i < user.saved_recipes.length; i++) {\n        currentRecipes.push((await axios.get(`${process.env.REACT_APP_API_URL}/Recipe?recipeId=${user.saved_recipes[i]}`)).data)\n      }\n\n      const listRecipes = currentRecipes.map(recipe => ({\n        ...recipe,\n        favorited: true\n      }));\n      console.log(listRecipes)\n      this.setState(prevState => ({\n        recipes: listRecipes,\n      }));\n    } else {\n      await this.fetchData()\n    }\n\n\n\n\n\n    this.setState(prevState => ({\n      showFavoritedOnly: showFavoritedOnly,\n    }));\n  }\n\nhandleToggleFavorite = (index) => {\n    const state = store.getState()\n    let userId = -1\n    if(state.auth.user){\n      userId = state.auth.user.id\n    }\n    this.setState(prevState => {\n      const updatedRecipes = [...prevState.recipes];\n      if (userId < 0) {\n        alert(\"Login to Favorite Recipes\")\n        return { recipes: updatedRecipes };\n      }\n      const savedRecipe = {\n        \"recipeID\":updatedRecipes[index].recipe_Id,\n        \"url\":updatedRecipes[index].url,\n        \"users\":userId,\n        \"name\":updatedRecipes[index].name,\n        \"image\":updatedRecipes[index].image,\n        \"total_time\":0\n      }\n      axios.post(`${process.env.REACT_APP_API_URL}/Recipe`, savedRecipe).then(res => {\n        console.log(res)\n      })\n\n      updatedRecipes[index].favorited = !updatedRecipes[index].favorited;\n      return { recipes: updatedRecipes };\n    });\n  }\n\n\n\n  render() {\n    const { carouselImages, hoveredImageIndex, recipes, searchQuery, showCanMakeOnly, showFavoritedOnly } = this.state;\n    const queryParameters = new URLSearchParams(window.location.search)\n    const userId = queryParameters.get(\"userid\")\n    const link = '/my-fridge?userid=' + userId;\n    // Filter recipes based on search query and checkboxes\n    const filteredRecipes = recipes.filter(recipe =>\n      (recipe.name.toLowerCase().includes(searchQuery.toLowerCase())) &&\n      (!showFavoritedOnly || recipe.favorited)\n    );\n\n    return (\n      <div>\n        <NavPage />\n\n\n        <div className=\"suggested-recipes\">\n          <h2>Suggested Recipes</h2>\n          <div className=\"recipe-scroll-container\">\n          <div className=\"carousel\">\n            <div className=\"carousel-inner\">\n              {carouselImages.map((imageData, index) => (\n                  <a key={index} href={imageData.url} className=\"image-link\">\n                    <div\n                        className=\"image-container\"\n                        onMouseEnter={() => this.handleHoverImage(index)}\n                        onMouseLeave={() => this.handleHoverImage(null)}\n                    >\n                      <img\n                          src={imageData.image}\n                          alt={imageData.name}\n                          className={index === hoveredImageIndex ? 'center grow' : ''}\n                      />\n                      {index === hoveredImageIndex && (\n                          <div className=\"overlay\">\n                            <div className=\"text\">\n                              <p>{imageData.name}</p>\n                            </div>\n                          </div>\n                      )}\n                    </div>\n                  </a>\n              ))}\n            </div>\n          </div>\n          </div>\n        </div>\n\n        <div className=\"search-recipes\">\n          <h2>Search Recipes</h2>\n          <div className=\"search-container\">\n            <input type=\"text\" placeholder=\"Search...\" value={searchQuery} onChange={this.handleSearchChange}/>\n            <label>\n              <input type=\"checkbox\" checked={showCanMakeOnly} onChange={this.handleCanMakeChange}/>\n              Only show recipes I can make\n            </label>\n            <label>\n              <input type=\"checkbox\" checked={showFavoritedOnly} onChange={this.handleFavoritedChange}/>\n              Only show favorited recipes\n            </label>\n          </div>\n        </div>\n\n        <div className=\"recipe-container\">\n          <div className=\"recipe-scroll-container\">\n            <RecipeGrid recipes={filteredRecipes} onToggleFavorite={this.handleToggleFavorite}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  checkAuthenticated: () => dispatch(checkAuthenticated()),\n  load_user: () => dispatch(load_user())\n});\n\nexport default connect(null, mapDispatchToProps)(Homepage);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}